<?xml version="1.0"?>
<!--
 - Portions Copyright (C) 2019 - 2020, Fyfe Software Inc. and the SanteSuite Contributors (See NOTICE.md)
 - 
 - 
 - Licensed under the Apache License, Version 2.0 (the "License"); you 
 - may not use this file except in compliance with the License. You may 
 - obtain a copy of the License at 
 - 
 - http://www.apache.org/licenses/LICENSE-2.0 
 - 
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 - License for the specific language governing permissions and limitations under 
 - the License.
 - 
 - User: fyfej (Justin Fyfe)
 - Date: 2020-1-8
 -->

<!-- This is an empty configuration file for a standard SanteDB instance -->
<!-- Note: You will need to enable the appropriate sections for your environment -->
<SanteDBConfiguration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0.59.0" 
                      xmlns:santempi="http://santedb.org/configuration/santempi" 
                      xmlns:santeguard="http://santedb.org/configuration/santeguard" 
                      xmlns="http://santedb.org/configuration">
  <!-- Configuration Sections -->
  <sections>
    <add type="SanteDB.Core.Configuration.EmailNotificationConfigurationSection, SanteDB.Core.Api, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Core.Configuration.DiagnosticsConfigurationSection, SanteDB.Core.Api, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Messaging.Metadata.Configuration.MetadataConfigurationSection, SanteDB.Messaging.Metadata, Version=2.1.0.0"/>
    <add type="SanteDB.Server.Core.Configuration.AppletConfigurationSection, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Core.Configuration.ApplicationServiceContextConfigurationSection, SanteDB.Core.Api, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Core.Configuration.Data.DataConfigurationSection, SanteDB.Core.Api, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Authentication.OAuth2.Configuration.OAuthConfigurationSection, SanteDB.Authentication.OAuth2, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Caching.Memory.Configuration.MemoryCacheConfigurationSection, SanteDB.Caching.Memory, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Caching.Redis.Configuration.RedisConfigurationSection, SanteDB.Caching.Redis, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Server.Core.Configuration.JobConfigurationSection, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Server.Core.Configuration.RestConfigurationSection, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Server.Core.Configuration.BasicAuthorizationConfigurationSection, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Server.Core.Configuration.ClaimsAuthorizationConfigurationSection, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Server.Core.Configuration.SecurityConfigurationSection, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Core.Security.Tfa.Email.Configuration.TfaEmailMechanismConfigurationSection, SanteDB.Core.Security.Tfa.Email, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Core.Security.Tfa.Twilio.Configuration.TwilioTfaMechanismConfigurationSection, SanteDB.Core.Security.Tfa.Twilio, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Messaging.AMI.Configuration.AmiConfigurationSection, SanteDB.Messaging.AMI, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Messaging.FHIR.Configuration.FhirServiceConfigurationSection, SanteDB.Messaging.FHIR, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Messaging.GS1.Configuration.Gs1ConfigurationSection, SanteDB.Messaging.GS1, Version=1.10.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Messaging.HDSI.Configuration.HdsiConfigurationSection, SanteDB.Messaging.HDSI, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Messaging.HL7.Configuration.Hl7ConfigurationSection, SanteDB.Messaging.HL7, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Persistence.Auditing.ADO.Configuration.AdoAuditConfigurationSection, SanteDB.Persistence.Auditing.ADO, Version=1.10.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Persistence.Data.ADO.Configuration.AdoPersistenceConfigurationSection, SanteDB.Persistence.Data.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Persistence.Diagnostics.Email.Configuration.DiagnosticEmailServiceConfigurationSection, SanteDB.Persistence.Diagnostics.Email, Version=1.10.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Persistence.Diagnostics.Jira.Configuration.JiraServiceConfigurationSection, SanteDB.Persistence.Diagnostics.Jira, Version=1.1.2.24606, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Persistence.MDM.Configuration.MdmConfigurationSection, SanteDB.Persistence.MDM, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Persistence.Reporting.ADO.Configuration.ReportingConfiguration, SanteDB.Persistence.Reporting.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Reporting.Core.Configuration.ReportingConfigurationSection, SanteDB.Reporting.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Reporting.Jasper.Configuration.JasperConfigurationSection, SanteDB.Reporting.Jasper, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Warehouse.ADO.Configuration.AdoWarehouseConfigurationSection, SanteDB.Warehouse.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Server.Core.Configuration.SanteDBServerConfiguration, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Messaging.Atna.Configuration.AtnaConfigurationSection, SanteDB.Messaging.Atna, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Server.Core.Configuration.FileSystemQueueConfigurationSection, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.OrmLite.Configuration.OrmConfigurationSection, SanteDB.OrmLite, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Caching.Redis.Configuration.RedisConfigurationSection, SanteDB.Caching.Redis, Version=1.10.0.0, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Tools.Debug.Configuration.DebugToolsConfigurationSection, SanteDB.Tools.Debug, Version=1.10.0.0, Culture=neutral, PublicKeyToken=null"/>
    <add type="SanteDB.Core.Configuration.AuditAccountabilityConfigurationSection, SanteDB.Core.Api, Version=1.10.0.0"/>
    <add type="SanteDB.Matcher.Configuration.File.FileMatchConfigurationSection, SanteDB.Matcher.Configuration.File, Version=2.1.0.0"/>
    <add type="SanteDB.Core.Configuration.ResourceMergeConfigurationSection, SanteDB.Core.Api, Version=2.1.0.0"/>
    <add type="SanteDB.Core.Data.Quality.Configuration.DataQualityConfigurationSection, SanteDB.Core.Api, Version=2.1.0.0"/>
  </sections>
  <!-- Built-in Audit Repository Filters -->
  <section xsi:type="AuditAccountabilityConfigurationSection" completeAuditTrail="false">
    <filters>
      <!-- Filters are controlled by attributes as listed below:
        @outcome = One or outcome codes to filter
        @action = One or more action codes to filter : (c)reate, (u)pdate, (d)elete, (e)xecute, (r)ead
        @event = One or more event codes to filter
        @insert = Store the audit in our audit database (true|false)
        @ship = Forward the audit to a central audit repository (true|false)
      -->
      <add outcome="fail.minor fail.major fail.epic" insert="true" ship="true" />
      <add action="c r u d" insert="true" ship="true" />
      <add action="x" event="network security restrictedFn" outcome="ok" insert="false" ship="false" />
    </filters>
  </section>
  <!-- E-Mail Notification Subsystem Configuration -->
  <section xsi:type="EmailNotificationConfigurationSection">
    <!-- SMTP Server Details -->
    <smtp>
      <server>smtp://smtp.sendgrid.net:587</server>
      <username>apikey</username>
      <password></password>
      <useTls>true</useTls>
      <from>no-reply@fyfesoftware.ca</from>
    </smtp>
    <!-- Administrative Contacts -->
    <adminContacts>
      <add>justin@fyfesoftware.ca</add>
    </adminContacts>
  </section>
  <!-- If Using FileMatchProvider plugin, the directory where match configuration files are stored  -->
  <!--<section xsi:type="FileMatchConfigurationSection">
    <basePath>
      <add readonly="false">PATH_TO_YOUR_MATCH_CONFIG_FILES</add>
    </basePath>
  </section>-->
  <!-- If using OpenAPI Plugin -->
  <section xsi:type="MetadataConfigurationSection">
    <!-- The host to emit in the Swagger JSON -->
    <host>http://external_access_url</host>
  </section>
  <!-- If using File-System Persistent Queueing (like for outbound GS1 and HL7 messages) -->
  <section xsi:type="FileSystemQueueConfigurationSection" queueRoot=".\queue" />
  <!-- Database Configuration -->
  <section xsi:type="DataConfigurationSection">
      <connectionStrings>
        <add name="FirebirdSQL" value="initial catalog=|DataDirectory|\santedb_test.fdb;server type=Embedded;user id=sysdba" provider="FirebirdSQL" />
        <add name="AUDIT_FirebirdSQL" value="initial catalog=|DataDirectory|\sdb_audit.fdb;server type=Embedded;user id=sysdba" provider="FirebirdSQL"/>
      </connectionStrings>
  </section>
  <!-- Object Relational Model Configuration -->
  <section xsi:type="OrmConfigurationSection">
    <providers>
      <add type="SanteDB.OrmLite.Providers.Postgres.PostgreSQLProvider, SanteDB.OrmLite, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" invariant="npgsql" />
      <add type="SanteDB.OrmLite.Providers.Firebird.FirebirdSQLProvider, SanteDB.OrmLite, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" invariant="FirebirdSQL" />
    </providers>
    <dbProviderFactories>
      <add name="PostgreSQL Data Provider" invariant="Npgsql" description=".Net Framework Data Provider for PostgreSQL" type="Npgsql.NpgsqlFactory, Npgsql, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7"/>
      <add name="Firebird Data Provider" invariant="FirebirdSQL" description="Firebird" type="FirebirdSql.Data.FirebirdClient.FirebirdClientFactory, FirebirdSql.Data.FirebirdClient, Culture=neutral, PublicKeyToken=3750abcc3150b00c" />
    </dbProviderFactories>
  </section>
  <!-- Local Audit Database Configuration -->
  <section xsi:type="AdoAuditConfigurationSection"
		   readWriteConnectionString="AUDIT_FirebirdSQL"
		   readOnlyConnectionString="AUDIT_FirebirdSQL"
		   traceSql="false"
		   providerType="FirebirdSQL" />
  
  <!-- If using SanteMPI the configuration for MPI specific tables 
  <section xsi:type="santempi:AdoConfigurationSection"
      readWriteConnectionString="FirebirdSQL"
	    readOnlyConnectionString="FirebirdSQL"
	    traceSql="false"
	    providerType="FirebirdSQL"
	    perpareStatements="false"
    />
   -->
  <!-- Configuraiton for AppletLoader -->
  <section xsi:type="AppletConfigurationSection" appletDirectory=".\applets" allowUnsignedApplets="true">
    <!-- Digital Signing Thumbprints of Trusted Publishers -->
    <trustedPublishers>
      <add>82C63E1E9B87578D0727E871D7613F2F0FAF683B</add>
      <add>4326A4421216AC254DA93DC61B93160B08925BB1</add>
    </trustedPublishers>
  </section>
  <!-- OpenID / OAUTH Configuration -->
  <section xsi:type="OAuthConfigurationSection" issuerName="http://localhost:8080/auth">
    <!-- Claims that clients are allowed to attach to their authentication requests -->
    <allowedClaims>
      <add>scope</add>
      <add>PolicyOverride</add>
      <add>ResourceId</add>
      <add>PurposeOfUse</add>
      <add>FacilityId</add>
      <add>OrganizationId</add>
    </allowedClaims>
    <!-- Token type (JWT or BEARER for random bearer token) -->
    <tokenType>bearer</tokenType>
    <!-- Allow client_credentials grants without device authentication -->
    <allowNodelessClientAuth>true</allowNodelessClientAuth>
  </section>
  
  <!-- If using Memory Caching -->
  <section xsi:type="MemoryCacheConfigurationSection" autoSubscribe="true" maxSize="10000" maxAge="3600" />
  <!-- If using REDIS Caching
  <section xsi:type="RedisConfigurationSection" ttl="PT5H">
    <servers>
      <add>localhost:6379</add>
    </servers>
  </section>
  -->
  <!-- Built-In Diagnostics and Logging Configuration -->
  <section xsi:type="DiagnosticsConfigurationSection">
    <sources>
      <add name="SanteDB.Authentication.OAuth2" filter="Warning" />
      <add name="SanteDB.Caching.Memory" filter="Warning" />
      <add name="SanteDB.Caching.Memory.Query" filter="Warning" />
      <add name="SanteDB.Caching.Redis" filter="Warning" />
      <add name="SanteDB.Core.HttpRest" filter="Warning" />
      <add name="SanteDB.Core.Data" filter="Warning" />
      <add name="SanteDB.Core.Map" filter="Warning" />
      <add name="SanteDB.Core.Security" filter="Warning" />
      <add name="SanteDB.Core" filter="Warning" />
      <add name="SanteDB.Core.Queue" filter="Warning" />
      <add name="SanteDB.Core.Security.Tfa.Email" filter="Warning" />
      <add name="SanteDB.Core.Security.Tfa.Twilio" filter="Warning" />
      <add name="SanteDB.Messaging.AMI" filter="Warning" />
      <add name="SanteDB.Messaging.FHIR" filter="Warning" />
      <add name="SanteDB.Messaging.GS1" filter="Warning" />
      <add name="SanteDB.Messaging.HDSI" filter="Warning" />
      <add name="SanteDB.Messaging.HL7" filter="Informational" />
      <add name="SanteDB.Messaging.Metadata" filter="Warning" />
      <add name="SanteDB.Messaging.RISI" filter="Warning" />
      <add name="SanteDB.OrmLite.PostgreSQL" filter="Warning" />
      <add name="SanteDB.Matcher.Engine" filter="Verbose"/>
      <add name="SanteDB.OrmLite.Sqlite" filter="Warning" />
      <add name="SanteDB.OrmLite.FirebirdSQL" filter="Warning" />
      <add name="SanteDB.OrmLite" filter="Warning" />
      <add name="SanteDB.Auditing.ADO" filter="Warning" />
      <add name="SanteDB.Persistence.Data.ADO" filter="Warning" />
      <add name="SanteDB.Matcher.Configuration.File.FileMatchConfigurationProvider" filter="Verbose"/>
      <add name="SanteDB.Persistence.Diagnostics.Email" filter="Warning" />
      <add name="SanteDB.Persistence.Diagnostics.Jira" filter="Warning" />
      <add name="SanteDB.Persistence.MDM" filter="Verbose" />
      <add name="SanteDB.Warehouse.ADO" filter="Warning" />
      <add name="SanteDB.Rest.Common.ResourceHandlerTool" filter="Error"/>
      <add name="SanteDB.Core.DataSet" filter="Warning"/>
      <add name="SanteDB.Core.AppletManager" filter="Warning"/>
    </sources>
    <writers>
      <add name="main" initializationData="santedb.log" filter="Warning">
        <writer>SanteDB.Server.Core.Diagnostics.RolloverTextWriterTraceWriter, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</writer>
      </add>
      <add name="console" initializationData="santedb.log" filter="Warning">
        <writer>SanteDB.Server.Core.Diagnostics.ConsoleTraceWriter, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</writer>
      </add>
    </writers>
  </section>
  <!-- Defualt Job Management -->
  <section xsi:type="JobConfigurationSection">
    <!-- This can be used to add jobs at a specified interval to the service 
    <jobs>
      <add type="value" interval="0" />
    </jobs>-->
  </section>
  <!-- REST Endpoints -->
  <section xsi:type="RestConfigurationSection">
    <!-- OpenAPI Endpoint -->
    <service name="META">
      <endpoint address="http://0.0.0.0:8080/api-docs" contract="SanteDB.Messaging.Metadata.Rest.IMetadataServiceContract, SanteDB.Messaging.Metadata, Version=2.1.0.0">
        <add type="SanteDB.Rest.Common.Behavior.MessageCompressionEndpointBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
      </endpoint>
    </service>
    <!-- Primary HDSI Endpoint -->
    <service name="HDSI">
      <behaviors>
        <add type="SanteDB.Server.Core.Rest.Security.TokenAuthorizationAccessBehavior, SanteDB.Server.Core, Version=1.10.0.0"/>
      </behaviors>
      <endpoint address="http://0.0.0.0:8080/hdsi" contract="SanteDB.Rest.HDSI.IHdsiServiceContract, SanteDB.Rest.HDSI, Version=1.10.0.0">
        <behaviors>
          <add type="SanteDB.Rest.Common.Behavior.MessageLoggingEndpointBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
          <add type="SanteDB.Rest.Common.Behavior.MessageCompressionEndpointBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
          <add type="SanteDB.Rest.Common.Behavior.MessageDispatchFormatterBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
        </behaviors>
      </endpoint>
    </service>
    <!-- Business Intelligence Endpoint-->
    <service name="BIS">
      <behaviors>
        <add type="SanteDB.Server.Core.Rest.Security.TokenAuthorizationAccessBehavior, SanteDB.Server.Core, Version=1.10.0.0"/>
      </behaviors>
      <endpoint address="http://0.0.0.0:8080/bis" contract="SanteDB.Rest.BIS.IBisServiceContract, SanteDB.Rest.BIS, Version=1.10.0.0">
        <behaviors>
          <add type="SanteDB.Rest.Common.Behavior.MessageLoggingEndpointBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
          <add type="SanteDB.Rest.Common.Behavior.MessageCompressionEndpointBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
        </behaviors>
      </endpoint>
    </service>
    <!-- Administration and Management API -->
    <service name="AMI">
      <behaviors>
        <add type="SanteDB.Server.Core.Rest.Security.TokenAuthorizationAccessBehavior, SanteDB.Server.Core, Version=1.10.0.0"/>
      </behaviors>
      <endpoint address="http://0.0.0.0:8080/ami" contract="SanteDB.Rest.AMI.IAmiServiceContract, SanteDB.Rest.AMI, Version=1.10.0.0">
        <behaviors>
          <add type="SanteDB.Rest.Common.Behavior.MessageLoggingEndpointBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
          <add type="SanteDB.Rest.Common.Behavior.MessageCompressionEndpointBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
          <add type="SanteDB.Rest.Common.Behavior.MessageDispatchFormatterBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
        </behaviors>
      </endpoint>
    </service>
    <!-- HL7 FHIR R3 -->
    <service name="FHIR">
      <behaviors>
        <add type="SanteDB.Server.Core.Rest.Security.TokenAuthorizationAccessBehavior, SanteDB.Server.Core, Version=1.10.0.0"/>
      </behaviors>
      <endpoint address="http://0.0.0.0:8080/fhir" contract="SanteDB.Messaging.FHIR.Rest.IFhirServiceContract, SanteDB.Messaging.FHIR, Version=1.10.0.0">
        <behaviors>
          <add type="SanteDB.Rest.Common.Behavior.MessageLoggingEndpointBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
          <add type="SanteDB.Rest.Common.Behavior.MessageCompressionEndpointBehavior, SanteDB.Rest.Common, Version=1.10.0.0"/>
          <add type="SanteDB.Rest.Common.Behavior.CorsEndpointBehavior, SanteDB.Rest.Common, Version=1.10.0.0">
            <configuration>
              <CorsEndpointBehaviorConfiguration>
                <resource name="*" domain="*">
                  <verbs>
                    <add>OPTIONS</add>
                    <add>POST</add>
                    <add>PUT</add>
                    <add>PATCH</add>
                    <add>DELETE</add>
                    <add>GET</add>
                  </verbs>
                  <headers>
                    <add>Content-Type</add>
                    <add>Accept-Encoding</add>
                    <add>Content-Encoding</add>
                  </headers>
                </resource>
              </CorsEndpointBehaviorConfiguration>
            </configuration>
          </add>
        </behaviors>
      </endpoint>
    </service>
    <!-- OAUTH 2 Endpoint -->
    <service name="OAuth2">
      <endpoint address="http://0.0.0.0:8080/auth" contract="SanteDB.Authentication.OAuth2.Rest.IOAuthTokenContract, SanteDB.Authentication.OAuth2, Version=1.10.0.0"/>
    </service>
  </section>
  
  <!-- Used for authorizing clients using a claims token -->
  <section xsi:type="ClaimsAuthorizationConfigurationSection" realm="127.0.0.1">
    <issuer>
      <add name="127.0.0.1" alg="hmac" hmacKey="uuNQ0pAkW+M2uxHjK1pisFZBFYjvkgveJcGtDy2E8i8=" />
      <!-- To validate a sender using X509 certs -->
      <!--<add name="127.0.0.1" alg="rsa" findType="FindByThumbprint" storeName="My" storeLocation="CurrentUser" findValue="value" />-->
    </issuer>
    <audiences>
      <add>http://localhost:8080/ami</add>
      <add>http://localhost:8080/hdsi</add>
      <add>http://localhost:8080/fhir</add>
      <add>http://localhost:8080/risi</add>
      <add>http://localhost:8080/sandbox</add>
    </audiences>
  </section>
  <!-- Represents this server's internal security configuration -->
  <section xsi:type="SecurityConfigurationSection"
           passwordRegex="^(?=.*\d){1,}(?=.*[a-z]){1,}(?=.*[A-Z]){1,}(?=.*[^\w\d]){1,}.{6,}$"
           allowUnsignedApplets="true"
           pepExemptionPolicy="devices">
    <!-- Sets policies for the system -->
    <securityPolicy>
      <add enabled="true" policy="auth.pwd.maxAge">
        <int>120</int>
      </add>
      <add enabled="true" policy="auth.pwd.history">
        <bool>true</bool>
      </add>
      <add enabled="true" policy="auth.failLogin">
        <int>5</int>
      </add>
      <add enabled="true" policy="auth.session.length">
        <timespan>PT30M</timespan>
      </add>
      <add enabled="true" policy="auth.session.refresh">
        <timespan>PT35M</timespan>
      </add>
    </securityPolicy>
    <!-- Sets the thumbprints of publishers that should be trusted to run code-->
    <trustedPublishers>
      <add>84BD51F0584A1F708D604CF0B8074A68D3BEB973</add>
      <add>82C63E1E9B87578D0727E871D7613F2F0FAF683B</add>
    </trustedPublishers>
    <!-- SanteDB signs a lot of data when communicating it, this is used for configuring how this server signs data -->
    <signingKeys>
      <add alg="hmac" hmacKey="uuNQ0pAkW+M2uxHjK1pisFZBFYjvkgveJcGtDy2E8i8="/>
    </signingKeys>
    <!-- To Configure X509 Signatures -->
    <!--<signing alg="rsa" findType="FindByThumbprint" storeName="My" storeLocation="CurrentUser" findValue="value" />-->
  </section>
  
  <!-- This section configures Twilio SMS TFA authentication -->
  <!--<section xsi:type="TwilioTfaMechanismConfigurationSection" auth="value" from="value" sid="value" />-->
  <!-- This section configures the AMI -->
  <section xsi:type="AmiConfigurationSection">
    <!-- This controls the allowed resources that can run on the AMI -->
    <!--<resources>
      <add>value</add>
    </resources>-->
    <!-- Configures the Microsoft Certification Authority -->
    <msftCertAuth autoApprove="false" name="value" server="value" />
    <!-- In distributed environments this allows clients to discover where the other servers are located -->
    <!--<endpoints>
      <add type="hdsi" cap="none" />
    </endpoints>-->
  </section>
  <!-- Configures the FHIR service-->
  <!--<section xsi:type="FhirServiceConfigurationSection" restEndpoint="FHIR" index="home-page.html ">
    --><!-- Resources which are permitted on the FHIR server --><!--
    <resourceHandlers>
      <add type="SanteDB.Messaging.FHIR.Handlers.EncounterResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Messaging.FHIR.Handlers.AdverseEventResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Messaging.FHIR.Handlers.AllergyIntoleranceResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Messaging.FHIR.Handlers.ConditionResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Messaging.FHIR.Handlers.LocationResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Messaging.FHIR.Handlers.MedicationResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Messaging.FHIR.Handlers.ObservationResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Messaging.FHIR.Handlers.SubstanceResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Messaging.FHIR.Handlers.PatientResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Messaging.FHIR.Handlers.ImmunizationRecommendationResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Messaging.FHIR.Handlers.ImmunizationResourceHandler, SanteDB.Messaging.FHIR, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"/>
    </resourceHandlers>
    --><!-- Sets the base path for reverse proxies --><!--
    <base>http://localhost:8080/fhir</base>
  </section>-->
  <!-- Configurations Related to GS1 -->
  <!--<section xsi:type="Gs1ConfigurationSection"
           autoCreateMaterials="true"
           defaultAuthority="1.2.3.4.5.6.7"
           queueName="gs1"
           partnerAuthority="urn:oid:1.2.3.4.5.6.7"
           partnerIdentification="SanteDB">
    <broker useAs2MimeEncoding="false" userName="bobby" password="fluffy_penguins">
      <binding optimize="false" />
      <enableTracing>false</enableTracing>
      <endpoint>
        <add address="http://some-remote-lmis.com:3092" timeout="10000" />
      </endpoint>
      --><!-- To present a client certificate to the server 
      <clientCertificate findType="FindByThumbprint" storeName="My" storeLocation="CurrentUser" findValue="value" />
      --><!--
    </broker>
    <senderContactEmail>bob@bobstrading.com</senderContactEmail>
  </section>-->
  <!-- This section configures the behavior of the HDSI -->
  <section xsi:type="HdsiConfigurationSection">
    <!-- Resources which are permitted to run on this HDSI instance -->
    <resources/>
  </section>
  <!-- Controls the HL7 v2 LLP Handler -->
  <!--<section xsi:type="Hl7ConfigurationSection" security="Msh8">
    --><!-- Classes of PLACE which can be used for a Birthplace Lookup --><!--
    <birthplaceClasses>
      <add>79DD4F75-68E8-4722-A7F5-8BC2E08F5CD6</add>
      <add>48B2FFB3-07DB-47BA-AD73-FC8FB8502471</add>
      <add>D9489D56-DDAC-4596-B5C6-8F41D73D8DC5</add>
      <add>FF34DFA7-C6D3-4F8B-BC9F-14BCDC13BA6C</add>
      <add>8CF4B0B0-84E5-4122-85FE-6AFA8240C218</add>
    </birthplaceClasses>
    --><!-- The authority of your UUIDs --><!--
    <localAuthority>
      <domainName xmlns="http://santedb.org/model">YOUR_LOCAL_V2_AUTHORITY</domainName>
      <oid xmlns="http://santedb.org/model">1.3.6.1.4.1.52820.5.1.1.1.999</oid>
      <url xmlns="http://santedb.org/model">http://your/fhir/authority</url>
    </localAuthority>
    --><!-- The SSN Authority from PID segment (map to PID-3) --><!--
    <ssnAuthority>
      <domainName xmlns="http://santedb.org/model">SSN</domainName>
      <oid xmlns="http://santedb.org/model">2.16.840.1.113883.4.1</oid>
      <url xmlns="http://santedb.org/model">http://hl7.org/fhir/sid/us-ssn</url>
    </ssnAuthority>
    <services>
      <add address="llp://0.0.0.0:2100" name="LLP" receiveTimeout="20000">
        --><!-- If you want to enable security Encryption
        <sllp checkCrl="false" requireClientCert="false">
          <serverCertificate findType="FindByThumbprint" storeName="My" storeLocation="CurrentUser" findValue="value" />
          <clientAuthorityCertificate findType="FindByThumbprint" storeName="My" storeLocation="CurrentUser" findValue="value" />
        </sllp>
        --><!--
        <handler>
          <add type="SanteDB.Messaging.HL7.Messages.QbpMessageHandler, SanteDB.Messaging.HL7, Version=1.10.0.0">
            <message isQuery="true" name="QBP^Q22" />
            <message isQuery="true" name="QBP^Q23" />
          </add>
          <add type="SanteDB.Messaging.HL7.Messages.AdtMessageHandler, SanteDB.Messaging.HL7, Version=1.10.0.0">
            <message isQuery="false" name="ADT^A01"/>
            <message isQuery="false" name="ADT^A04"/>
            <message isQuery="false" name="ADT^A08"/>
            <message isQuery="false" name="ADT^A40"/>
          </add>
        </handler>
      </add>
    </services>
  </section>-->
  <!-- Data Quality Configuration Section -->
  <section xsi:type="DataQualityConfigurationSection">
    <!-- Rule Set for data quality -->
    <ruleSet enabled="true" id="default" name="My Data Quality Configuration">
      <resources>
        <add resource="Patient">
          <assert id="dob.required" name="Date of Birth Required" priority="Warning">
            <expression>dateOfBirth=!null</expression>
          </assert>
          <assert id="dob.future" name="Date of Birth in Future" priority="Warning">
            <expression>dateOfBirth=&lt;$now</expression>
          </assert>
          <assert id="address.required" name="Address Required" priority="Warning">
            <expression>address.component.value=!null</expression>
          </assert>
          <assert id="name.required" name="Name Required" priority="Warning">
            <expression>name.component.value=!null</expression>
          </assert>
          <assert id="identifier.national" name="Identifier Required" evaluation="any" priority="Warning">
            <expression>identifier[SSN].value=!null</expression>
            <expression>identifier[DLN].value=!null</expression>
          </assert>
          <assert id="gender.required" name="Gender Required" priority="Warning">
            <expression>genderConcept=!null</expression>
          </assert>
          <assert id="nok.required" name="Next of Kin Required" priority="Warning">
            <expression>relationship[Mother|Father|NextOfKin]=!null</expression>
          </assert>
          <assert id="birthplace.required" name="Birthpplace Required" priority="Warning">
            <expression>relationship[Birthplace]=!null</expression>
          </assert>
        </add>
      </resources>
    </ruleSet>
  </section>
  <!-- ATNA Audit log Shipping -->
  <!--<section xsi:type="AtnaConfigurationSection" endpoint="127.0.0.1:11515" enterpriseSiteID="SanteDB^^^&amp;1.2.3.4.5.6.7" format="DICOM" transport="udp">
    --><!--<clientCertificate findType="FindByThumbprint" storeName="My" storeLocation="CurrentUser" findValue="value" />--><!--
  </section>-->
  <!-- This section controls the persistence for ADO.NET -->
  <section xsi:type="AdoPersistenceConfigurationSection"
           readWriteConnectionString="FirebirdSQL"
           readOnlyConnectionString="FirebirdSQL"
           traceSql="false"
			     providerType="FirebirdSQL"
           staOnly="false"
		       fuzzyTotal="false"
           autoUpdateExisting="true"
           autoInsertChildren="true"
           prepareStatements="true"
      validationLevel="Warning">
    <!-- Any corrective handlers should be added here 
    <corrections>
      <add>value</add>
    </corrections>
    To limit the resources that can be persisted in ADO.NET add them here
    <resources>
      <add>value</add>
    </resources>
    -->

  </section>
  <!-- Diagnostic e-mail (bug) report configuration -->
  <section xsi:type="DiagnosticEmailServiceConfigurationSection">
    <smtp from="value" password="value" server="value" ssl="false" username="value" />
    <recipients>
      <add>value</add>
    </recipients>
  </section>
  <!-- Diagnostics via JIRA configuration-->
  <!--<section xsi:type="JiraServiceConfigurationSection" userName="value" password="value" project="value" url="value" />-->
  <!-- Master Data Management Configuration -->
  <section xsi:type="ResourceMergeConfigurationSection">
    <resources>
      <!-- Note: You will have to install the Sante MATCH plugin for this to work and enable the FileMatchProvider -->
      <add type="Patient" matchConfiguration="org.santedb.smpi.matching.default" autoMerge="false" />
    </resources>
  </section>
  
  <section xsi:type="ApplicationServiceContextConfigurationSection" threadPoolSize="8">
    <serviceProviders>

      <!-- Core Services -->
      <add type="SanteDB.Server.Core.Services.Impl.DefaultOperatingSystemInfoService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Services.Impl.DefaultPolicyEnforcementService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Security.AesSymmetricCrypographicProvider,  SanteDB.Server.Core, Version=2.1.0.0" />
      <add type="SanteDB.Server.Core.Services.Impl.FileConfigurationService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Core.Jobs.DefaultJobManagerService, SanteDB.Core.Api, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Core.Services.Impl.DefaultThreadPoolService, SanteDB.Core.Api, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Services.Impl.FileSystemQueueService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Rest.RestServiceFactory, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Server.Core.Services.Impl.DefaultNetworkInformationService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"/>
      <!-- Security Services -->
      <add type="SanteDB.Persistence.Data.ADO.Services.AdoApplicationIdentityProvider, SanteDB.Persistence.Data.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Persistence.Data.ADO.Services.AdoDeviceIdentityProvider, SanteDB.Persistence.Data.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Persistence.Data.ADO.Services.AdoIdentityProvider, SanteDB.Persistence.Data.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Persistence.Data.ADO.Services.AdoSecurityChallengeProvider, SanteDB.Persistence.Data.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Persistence.Data.ADO.Services.AdoSessionProvider, SanteDB.Persistence.Data.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Persistence.Data.ADO.Services.AdoPolicyInformationService, SanteDB.Persistence.Data.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Persistence.Data.ADO.Services.AdoRoleProvider, SanteDB.Persistence.Data.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Security.Privacy.LocalDataPolicyFilterService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Security.SimpleTfaSecretGenerator, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Security.DefaultTfaRelayService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Security.DefaultDataSigningService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Security.DefaultPasswordValidationService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Core.Security.DefaultPolicyDecisionService, SanteDB.Core.Api, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Security.SHA256PasswordHashingService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />

      <!-- Caching Services -->
      <add type="SanteDB.Caching.Memory.MemoryCacheService, SanteDB.Caching.Memory, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Caching.Memory.MemoryQueryPersistenceService, SanteDB.Caching.Memory, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Caching.Memory.MemoryAdhocCache, SanteDB.Caching.Memory, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <!-- If using REDIS 
      <add type="SanteDB.Caching.Redis.RedisCacheService, SanteDB.Caching.Redis, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Caching.Redis.RedisQueryPersistenceService, SanteDB.Caching.Redis, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Caching.Redis.RedisAdhocCache, SanteDB.Caching.Redis, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      -->
      
      <!-- Data Services -->
      <add type="SanteDB.Persistence.Data.ADO.Services.AdoPersistenceService, SanteDB.Persistence.Data.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Persistence.Data.ADO.Services.AdoSubscriptionExecutor, SanteDB.Persistence.Data.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Persistence.Auditing.ADO.Services.AdoAuditRepositoryService, SanteDB.Persistence.Auditing.ADO, Version=1.10.0.0, Culture=neutral, PublicKeyToken=null" />

      <!-- Repository Services -->
      <add type="SanteDB.Server.Core.Services.Impl.LocalRepositoryFactoryService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Services.Impl.LocalRepositoryService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Services.Impl.LocalMailMessageRepository, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Services.Impl.LocalStockManagementRepositoryService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Server.Core.Services.Impl.LocalTagPersistenceService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      
      <!-- Subscription Management / Definition Service -->
      <add type="SanteDB.Core.Applets.Services.Impl.AppletSubscriptionRepository, SanteDB.Core.Applets, Version=1.30.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add type="SanteDB.Core.Security.Audit.AuditDaemonService, SanteDB.Core.Api, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />

      <!-- Data Migration & Management -->
      <add type="SanteDB.Server.Core.Persistence.DataInitializationService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />

      <!-- Care Planning Services -->
      <add type="SanteDB.Core.Protocol.SimpleCarePlanService, SanteDB.Core.Api, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />


      <!-- Messaging Services-->
      <!-- OAUTH 2.0 Plugin -->
      <add type="SanteDB.Authentication.OAuth2.OAuthMessageHandler, SanteDB.Authentication.OAuth2, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      
      <!-- HL7 FHIR Plugin -->
      <add type="SanteDB.Messaging.FHIR.FhirMessageHandler, SanteDB.Messaging.FHIR, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      
      <!-- GS1 BMS Plugins
      <add type="SanteDB.Messaging.GS1.StockSubscriber, SanteDB.Messaging.GS1, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Messaging.GS1.StockServiceMessageHandler, SanteDB.Messaging.GS1, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Messaging.GS1.Transport.AS2.As2IntegrationService, SanteDB.Messaging.GS1, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />-->

      <!-- HDSI Core API Plugin (dont remove) -->
      <add type="SanteDB.Messaging.HDSI.HdsiMessageHandler, SanteDB.Messaging.HDSI, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      
      <!-- HL7v2 Plugin -->
      <add type="SanteDB.Messaging.HL7.HL7MessageHandler, SanteDB.Messaging.HL7, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />

      <!-- Legacy RISI Plugin -->
      <!--<add type="SanteDB.Messaging.RISI.RisiMessageHandler, SanteDB.Messaging.RISI, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />-->

      <!-- Legacy Data Sandbox Experiments Plugin -->
      <!--<add type="SanteDB.Tools.DataSandbox.DataSandboxService, SanteDB.Tools.DataSandbox, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />-->
      
      <!-- AMI Plugin (dont remove) -->
      <add type="SanteDB.Messaging.AMI.AmiMessageHandler, SanteDB.Messaging.AMI, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      
      <!-- OpenAPI Plugin -->
      <add type="SanteDB.Messaging.Metadata.MetadataMessageHandler, SanteDB.Messaging.Metadata, Version=2.1.0.0"/>

      <!-- Patching Services -->
      <add type="SanteDB.Core.Services.Impl.SimplePatchService, SanteDB.Core.Api, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      
      <!-- Applet Management Service -->
      <add type="SanteDB.Server.Core.Services.Impl.LocalAppletManagerService, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />

      <!-- Load Business Rules from Applets -->
      <add type="SanteDB.Server.Core.Services.Daemons.AppletBusinessRulesDaemon, SanteDB.Server.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />

      <!-- E-Mail Bug Reports Plugin -->
      <add type="SanteDB.Persistence.Diagnostics.Email.DiagnosticReportPersistenceService, SanteDB.Persistence.Diagnostics.Email, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <!-- JIRA Reporting Services -->
      <!-- <add type="SanteDB.Persistence.Diagnostics.Jira.DiagnosticReportPersistenceService, SanteDB.Persistence.Diagnostics.Jira, Version=1.1.2.24168, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Persistence.Reporting.ADO.ReportingPersistenceService, SanteDB.Persistence.Reporting.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />-->
      
      <!-- Legacy Ad-hoc Warehouse
      <add type="SanteDB.Warehouse.ADO.ADODataWarehouse, SanteDB.Warehouse.ADO, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      -->
      <!-- SanteGuard Services -->
      <!--
      Audit Terminology Service:
      <add type="SanteGuard.Services.LocalAuditTermLookupService, SanteGuard.Core, Version=2.1.0.0"/>
      Enhanced Audit Repository:
      <add type="SanteGuard.Persistence.Ado.Services.AdoAuditPersistenceService, SanteGuard.Persistence.Ado, Version=2.1.0.0"/>
      <add type="SanteGuard.Services.Repositories.SanteGuardDataRepository, SanteGuard.Core, Version=2.1.0.0"/>
      <add type="SanteGuard.Services.Repositories.SanteGuardAuditRepository, SanteGuard.Core, Version=2.1.0.0"/>
      SYSLOG Receiver:
      <add type="SanteGuard.Messaging.Syslog.SyslogMessageHandler, SanteGuard.Messaging.Syslog, Version=2.1.0.0"/>
      End SanteGuard Services-->

      <!-- BI Services -->
      <!-- Enable BI on REST API: -->
      <add type="SanteDB.Rest.BIS.BisMessageHandler, SanteDB.Rest.BIS, Version=2.1.0.0"/>
      <!-- Load BI definitions from applets: -->
      <add type="SanteDB.BI.Services.Impl.AppletBiRepository, SanteDB.BI, Version=2.1.0.0"/>
      <!-- Use System RAM for PIVOT operations: -->
      <add type="SanteDB.BI.Services.Impl.InMemoryPivotProvider, SanteDB.BI, Version=2.1.0.0"/>
      <!-- Render Reports using Local Services -->
      <add type="SanteDB.BI.Services.Impl.LocalBiRenderService, SanteDB.BI, Version=2.1.0.0"/>

      <!-- If using Master Data Management -->
      <!--<add type="SanteDB.Persistence.MDM.Services.MdmDaemonService, SanteDB.Persistence.MDM, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null" />
      <add type="SanteDB.Persistence.MDM.Services.MdmDataManagementService, SanteDB.Persistence.MDM, Version=2.1.0.0"/>-->
      
      <!-- Weighted Record Matching Services:
      <add type="SanteDB.Matcher.Matchers.WeightedRecordMatchingService, SanteDB.Matcher, Version=2.1.0.0"/>
      Simple Record Matching Services;
      <add type="SanteDB.Matcher.Matchers.SimpleRecordMatchingService, SanteDB.Matcher, Version=2.1.0.0"/> -->
      <!-- Load Match configuration from files -->
      <add type="SanteDB.Matcher.Configuration.File.FileMatchConfigurationProvider, SanteDB.Matcher.Configuration.File, Version=2.1.0.0"/>

      <!-- Default Data Quality Services -->
      <add type="SanteDB.Core.Data.Quality.DataQualityService, SanteDB.Core.Api, Version=2.1.0.0"/>
      
      <!-- SanteMPI Services: 
      Name Alias Services:
      <add type="SanteMPI.Persistence.ADO.Services.AdoNameAliasService, SanteMPI.Persistence.ADO, Version=2.1.0.0"/>
      -->
    </serviceProviders>
  </section>
</SanteDBConfiguration>
